version: "3.9"

services:

  rabbit:
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}

  redis:
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  backend:
    build: ${PROJECT_DIR}/builds/backend
    image: ${COMPOSE_PROJECT_NAME}/backend:${RAPYDO_VERSION}
    volumes:
      - ${RESOURCES_LOCALPATH}:${SEADATA_RESOURCES_MOUNTPOINT}
      - ${PROJECT_DIR}/scripts:/scripts
    environment:
      MAIN_LOGIN_ENABLE: 1 # this could disable the basic /auth/login method

      # db access
      ALCHEMY_ENABLE: 1
      SEADATA_EDMO_CODE: ${SEADATA_EDMO_CODE}
      # The name of the directory in the local fs during ingestions
      # (to be mounted to celery workers and rancher containers)
      SEADATA_WORKSPACE_INGESTION: ${SEADATA_WORKSPACE_INGESTION} # host fs!
      SEADATA_WORKSPACE_PRODUCTION: ${SEADATA_WORKSPACE_PRODUCTION} # host fs!
      SEADATA_WORKSPACE_ORDERS: ${SEADATA_WORKSPACE_ORDERS} # host fs!
      SEADATA_API_IM_URL: ${SEADATA_API_IM_URL}
      SEADATA_API_VERSION: ${SEADATA_API_VERSION}
      SEADATA_RESOURCES_MOUNTPOINT: ${SEADATA_RESOURCES_MOUNTPOINT}
      DATA_PATH: ${SEADATA_RESOURCES_MOUNTPOINT}
      SEADATA_PRIVILEGED_USERS: ${SEADATA_PRIVILEGED_USERS}
      # rancher
      RESOURCES_URL: ${RESOURCES_URL}
      RESOURCES_KEY: ${RESOURCES_KEY}
      RESOURCES_SECRET: ${RESOURCES_SECRET}
      RESOURCES_PROJECT: ${RESOURCES_PROJECT}
      RESOURCES_QCLABEL: ${RESOURCES_QCLABEL}
      RESOURCES_LOCALPATH: ${RESOURCES_LOCALPATH}
      # hub
      RESOURCES_HUB: ${RESOURCES_HUB}
      RESOURCES_HUBUSER: ${RESOURCES_HUBUSER}
      RESOURCES_HUBPASS: ${RESOURCES_HUBPASS}
      # Loggin rabbit
      RABBIT_ENABLE: ${ACTIVATE_LOGGING_RABBIT}
      RABBIT_HOST: ${RABBIT_HOST}
      RABBIT_PORT: ${RABBIT_PORT}
      RABBIT_VHOST: ${RABBIT_VHOST}
      RABBIT_USER: ${RABBIT_USER}
      RABBIT_PASSWORD: ${RABBIT_PASSWORD}
      RABBIT_EXCHANGE: ${RABBIT_EXCHANGE}
      RABBIT_QUEUE: ${RABBIT_QUEUE}
      RABBIT_SSL_ENABLED: ${RABBIT_SSL_ENABLED}
      # containers
      # CONTAINERS_DBUSER: ${CONTAINERS_DBUSER}
      # CONTAINERS_DBPASS: ${CONTAINERS_DBPASS}
      # CONTAINERS_DBEXTRAUSER: ${CONTAINERS_DBEXTRAUSER}
      # CONTAINERS_DBEXTRAPASS: ${CONTAINERS_DBEXTRAPASS}
      # CONTAINERS_RABBITUSER: ${CONTAINERS_RABBITUSER}
      # CONTAINERS_RABBITPASS: ${CONTAINERS_RABBITPASS}
      CONTAINERS_WAIT_STOPPED: ${CONTAINERS_WAIT_STOPPED}
      CONTAINERS_WAIT_RUNNING: ${CONTAINERS_WAIT_RUNNING}

  celery:
    restart: always
    build:
      context: ${PROJECT_DIR}/builds/backend
      args:
        RAPYDO_VERSION: ${RAPYDO_VERSION}
        CURRENT_UID: ${CURRENT_UID}
        CURRENT_GID: ${CURRENT_GID}
    image: ${REGISTRY_HOST}${COMPOSE_PROJECT_NAME}/backend:${RAPYDO_VERSION}
    command: celery --app restapi.connectors.celery.worker.celery_app worker --concurrency=1 -Ofair -Q celery -n ${COMPOSE_PROJECT_NAME}-%h
    volumes:
      - ${RESOURCES_LOCALPATH}:${SEADATA_RESOURCES_MOUNTPOINT}
    environment:
      ACTIVATE: 1
      # needed by core tests because the template task tries to access to the db
      # do not include it restricted_celery and flower
      ALCHEMY_ENABLE: 1
      MAIN_LOGIN_ENABLE: 1
      DEBUG_LEVEL: ${LOG_LEVEL}
      LOG_RETENTION: ${LOG_RETENTION}
      DOMAIN: ${PROJECT_DOMAIN}
      SEADATA_EDMO_CODE: ${SEADATA_EDMO_CODE}
      SEADATA_API_IM_URL: ${SEADATA_API_IM_URL}
      SEADATA_API_VERSION: ${SEADATA_API_VERSION}
      # on rancher/celery host filesystem:
      SEADATA_WORKSPACE_INGESTION: ${SEADATA_WORKSPACE_INGESTION}
      SEADATA_WORKSPACE_PRODUCTION: ${SEADATA_WORKSPACE_PRODUCTION}
      SEADATA_WORKSPACE_ORDERS: ${SEADATA_WORKSPACE_ORDERS}
      SEADATA_RESOURCES_MOUNTPOINT: ${SEADATA_RESOURCES_MOUNTPOINT}

      REDIS_ENABLE: 1

  flower:
    restart: always
    build:
      context: ${PROJECT_DIR}/builds/backend
      args:
        RAPYDO_VERSION: ${RAPYDO_VERSION}
        CURRENT_UID: ${CURRENT_UID}
        CURRENT_GID: ${CURRENT_GID}
    image: ${REGISTRY_HOST}${COMPOSE_PROJECT_NAME}/backend:${RAPYDO_VERSION}
    hostname: flower
    environment:
      SEADATA_EDMO_CODE: ${SEADATA_EDMO_CODE}
      SEADATA_API_IM_URL: ${SEADATA_API_IM_URL}
      SEADATA_API_VERSION: ${SEADATA_API_VERSION}
      SEADATA_WORKSPACE_INGESTION: ${SEADATA_WORKSPACE_INGESTION}
      SEADATA_WORKSPACE_PRODUCTION: ${SEADATA_WORKSPACE_PRODUCTION}
      SEADATA_WORKSPACE_ORDERS: ${SEADATA_WORKSPACE_ORDERS}
      SEADATA_RESOURCES_MOUNTPOINT: ${SEADATA_RESOURCES_MOUNTPOINT}
      # SEADATA ELASTIC LOGS

  ingestion_celery:
    restart: always
    build:
      context: ${PROJECT_DIR}/builds/backend
      args:
        RAPYDO_VERSION: ${RAPYDO_VERSION}
        CURRENT_UID: ${CURRENT_UID}
        CURRENT_GID: ${CURRENT_GID}
    image: ${REGISTRY_HOST}${COMPOSE_PROJECT_NAME}/backend:${RAPYDO_VERSION}
    entrypoint: docker-entrypoint-celery
    command: celery --app restapi.connectors.celery.worker.celery_app worker --concurrency=1 -Ofair -Q ingestion -n ${COMPOSE_PROJECT_NAME}-%h
    # user: developer
    working_dir: /code
    volumes:
      # configuration files
      - ${SUBMODULE_DIR}/do/controller/confs/projects_defaults.yaml:/code/confs/projects_defaults.yaml
      - ${PROJECT_DIR}/project_configuration.yaml:/code/confs/project_configuration.yaml
      - ssl_certs:/etc/letsencrypt
      # Vanilla code
      - ${PROJECT_DIR}/backend:/code/${COMPOSE_PROJECT_NAME}
      # From project, if any
      - ${BASE_PROJECT_DIR}/backend:/code/${EXTENDED_PROJECT}
      - ${BASE_PROJECT_DIR}/project_configuration.yaml:/code/confs/extended_project_configuration.yaml

      - ${RESOURCES_LOCALPATH}:${SEADATA_RESOURCES_MOUNTPOINT}

      - ${SUBMODULE_DIR}/http-api/restapi:${PYTHON_PATH}/restapi

      - ${DATA_DIR}/logs:/logs

    networks:
      default:
    environment:
      CURRENT_UID: ${CURRENT_UID}
      PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      EXTENDED_PACKAGE: ${EXTENDED_PROJECT}
      APP_SECRETS: ${APP_SECRETS}
      CURRENT_GID: ${CURRENT_GID}

      # db access
      ALCHEMY_DB: ${ALCHEMY_DB}
      ALCHEMY_DBTYPE: ${ALCHEMY_DBTYPE}
      ALCHEMY_ENABLE: 1
      ALCHEMY_ENABLE_CONNECTOR: ${ALCHEMY_ENABLE_CONNECTOR}
      ALCHEMY_EXPIRATION_TIME: ${ALCHEMY_EXPIRATION_TIME}
      ALCHEMY_HOST: ${ALCHEMY_HOST}
      ALCHEMY_PASSWORD: ${ALCHEMY_PASSWORD}
      ALCHEMY_POOLSIZE: ${ALCHEMY_POOLSIZE}
      ALCHEMY_PORT: ${ALCHEMY_PORT}
      ALCHEMY_USER: ${ALCHEMY_USER}
      ALCHEMY_VERIFICATION_TIME: ${ALCHEMY_VERIFICATION_TIME}

      CELERY_ENABLE: 1
      CELERY_BROKER_SERVICE: ${CELERY_BROKER}
      CELERY_BACKEND_SERVICE: ${CELERY_BACKEND}
      CELERY_EXPIRATION_TIME: ${CELERY_EXPIRATION_TIME}
      CELERY_VERIFICATION_TIME: ${CELERY_VERIFICATION_TIME}
      RABBITMQ_EXPIRATION_TIME: ${RABBITMQ_EXPIRATION_TIME}
      RABBITMQ_VERIFICATION_TIME: ${RABBITMQ_VERIFICATION_TIME}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_SSL_ENABLED: ${RABBITMQ_SSL_ENABLED}

      REDIS_ENABLE: 1
      REDIS_ENABLE_CONNECTOR: ${REDIS_ENABLE_CONNECTOR}
      REDIS_EXPIRATION_TIME: ${REDIS_EXPIRATION_TIME}
      REDIS_VERIFICATION_TIME: ${REDIS_VERIFICATION_TIME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      #############################
      ACTIVATE: 1
      MAIN_LOGIN_ENABLE: 1 
      APP_MODE: ${APP_MODE}
      DEBUG_LEVEL: ${LOG_LEVEL}
      LOG_RETENTION: ${LOG_RETENTION}
      DOMAIN: ${PROJECT_DOMAIN}
      SEADATA_EDMO_CODE: ${SEADATA_EDMO_CODE}
      SEADATA_API_IM_URL: ${SEADATA_API_IM_URL}
      SEADATA_API_VERSION: ${SEADATA_API_VERSION}
      # on rancher/celery host filesystem:
      SEADATA_WORKSPACE_INGESTION: ${SEADATA_WORKSPACE_INGESTION}
      SEADATA_WORKSPACE_PRODUCTION: ${SEADATA_WORKSPACE_PRODUCTION}
      SEADATA_WORKSPACE_ORDERS: ${SEADATA_WORKSPACE_ORDERS}
      SEADATA_RESOURCES_MOUNTPOINT: ${SEADATA_RESOURCES_MOUNTPOINT}
      SEADATA_UID_PREFIX: ${SEADATA_UID_PREFIX}

      SMTP_ENABLE_CONNECTOR: ${SMTP_ENABLE_CONNECTOR}
      SMTP_ENABLE: ${ACTIVATE_SMTP}
      SMTP_EXPIRATION_TIME: ${SMTP_EXPIRATION_TIME}
      SMTP_VERIFICATION_TIME: ${SMTP_VERIFICATION_TIME}
      SMTP_ADMIN: ${SMTP_ADMIN}
      SMTP_NOREPLY: ${SMTP_NOREPLY}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}

  restricted_celery:
    restart: always
    build:
      context: ${PROJECT_DIR}/builds/backend
      args:
        RAPYDO_VERSION: ${RAPYDO_VERSION}
        CURRENT_UID: ${CURRENT_UID}
        CURRENT_GID: ${CURRENT_GID}
    image: ${REGISTRY_HOST}${COMPOSE_PROJECT_NAME}/backend:${RAPYDO_VERSION}
    entrypoint: docker-entrypoint-celery
    command: celery --app restapi.connectors.celery.worker.celery_app worker --concurrency=1 -Ofair -Q restricted -n ${COMPOSE_PROJECT_NAME}-%h
    # user: developer
    working_dir: /code
    volumes:
      # configuration files
      - ${SUBMODULE_DIR}/do/controller/confs/projects_defaults.yaml:/code/confs/projects_defaults.yaml
      - ${PROJECT_DIR}/project_configuration.yaml:/code/confs/project_configuration.yaml
      - ssl_certs:/etc/letsencrypt
      # Vanilla code
      - ${PROJECT_DIR}/backend:/code/${COMPOSE_PROJECT_NAME}
      # From project, if any
      - ${BASE_PROJECT_DIR}/backend:/code/${EXTENDED_PROJECT}
      - ${BASE_PROJECT_DIR}/project_configuration.yaml:/code/confs/extended_project_configuration.yaml

      - ${RESOURCES_LOCALPATH}:${SEADATA_RESOURCES_MOUNTPOINT}

      - ${SUBMODULE_DIR}/http-api/restapi:${PYTHON_PATH}/restapi

      - ${DATA_DIR}/logs:/logs

    networks:
      default:
    environment:
      CURRENT_UID: ${CURRENT_UID}
      PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      EXTENDED_PACKAGE: ${EXTENDED_PROJECT}
      APP_SECRETS: ${APP_SECRETS}
      CURRENT_GID: ${CURRENT_GID}

      CELERY_ENABLE: 1

      CELERY_BROKER_SERVICE: ${CELERY_BROKER}
      CELERY_BACKEND_SERVICE: ${CELERY_BACKEND}
      CELERY_EXPIRATION_TIME: ${CELERY_EXPIRATION_TIME}
      CELERY_VERIFICATION_TIME: ${CELERY_VERIFICATION_TIME}
      RABBITMQ_EXPIRATION_TIME: ${RABBITMQ_EXPIRATION_TIME}
      RABBITMQ_VERIFICATION_TIME: ${RABBITMQ_VERIFICATION_TIME}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_SSL_ENABLED: ${RABBITMQ_SSL_ENABLED}

      REDIS_ENABLE: 1
      REDIS_ENABLE_CONNECTOR: ${REDIS_ENABLE_CONNECTOR}
      REDIS_EXPIRATION_TIME: ${REDIS_EXPIRATION_TIME}
      REDIS_VERIFICATION_TIME: ${REDIS_VERIFICATION_TIME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      #############################
      ACTIVATE: 1
      MAIN_LOGIN_ENABLE: 1
      APP_MODE: ${APP_MODE}
      DEBUG_LEVEL: ${LOG_LEVEL}
      LOG_RETENTION: ${LOG_RETENTION}
      DOMAIN: ${PROJECT_DOMAIN}
      SEADATA_EDMO_CODE: ${SEADATA_EDMO_CODE}
      SEADATA_API_IM_URL: ${SEADATA_API_IM_URL}
      SEADATA_API_VERSION: ${SEADATA_API_VERSION}
      # on rancher/celery host filesystem:
      SEADATA_WORKSPACE_INGESTION: ${SEADATA_WORKSPACE_INGESTION}
      SEADATA_WORKSPACE_PRODUCTION: ${SEADATA_WORKSPACE_PRODUCTION}
      SEADATA_WORKSPACE_ORDERS: ${SEADATA_WORKSPACE_ORDERS}
      SEADATA_RESOURCES_MOUNTPOINT: ${SEADATA_RESOURCES_MOUNTPOINT}

      SMTP_ENABLE_CONNECTOR: ${SMTP_ENABLE_CONNECTOR}
      SMTP_ENABLE: ${ACTIVATE_SMTP}
      SMTP_EXPIRATION_TIME: ${SMTP_EXPIRATION_TIME}
      SMTP_VERIFICATION_TIME: ${SMTP_VERIFICATION_TIME}
      SMTP_ADMIN: ${SMTP_ADMIN}
      SMTP_NOREPLY: ${SMTP_NOREPLY}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
